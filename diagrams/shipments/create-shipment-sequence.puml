
@startuml

actor shipper
box "Olistics Node 1" #LightBlue
participant "Olistics backend 1"
database "Ethereum Private 1"
end box
box "Olistics Node 2" #LightBlue
database "Ethereum Private 2"
participant "Olistics backend 2"
end box
actor carrier

title __Create Shipment example__


'autonumber

== subscription ==
carrier -> "Olistics backend 2" : subscribe to \n Shipment created event
"Olistics backend 2" -> "Ethereum Private 2" : Polling Shipment created event


== intialization ==
shipper -> shipper : Create and sign Shipment trx
note left: using Olistics sdk

shipper -> "Olistics backend 1": Create Shipment Request
activate "Olistics backend 1"

"Olistics backend 1" -> "Ethereum Private 1" : broadcast signed \n createShipment trx

"Ethereum Private 1" --> "Olistics backend 1" : Transaction Hash

"Olistics backend 1" -> "Ethereum Private 1" : Polling Transaction completed

"Ethereum Private 1" -> "Ethereum Private 1" : Transaction mined

"Ethereum Private 1" -> "Ethereum Private 2" : ShipmentCreated event


"Ethereum Private 2" -> "Olistics backend 2" : ShipmentCreated event

"Olistics backend 2" --> "carrier" : ShipmentCreated event response


"Olistics backend 1" --> shipper: Create Shipment Response



@enduml